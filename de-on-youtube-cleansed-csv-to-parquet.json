{
	"jobConfig": {
		"name": "de-on-youtube-cleansed-csv-to-parquet",
		"description": "",
		"role": "arn:aws:iam::956128256668:role/de-on-youtube-glue-s3-role",
		"command": "glueetl",
		"version": "2.0",
		"runtime": null,
		"workerType": "G.1X",
		"numberOfWorkers": 10,
		"maxCapacity": 10,
		"maxRetries": 0,
		"timeout": 2880,
		"maxConcurrentRuns": 1,
		"security": "none",
		"scriptName": "de-on-youtube-cleansed-csv-to-parquet.py",
		"scriptLocation": "s3://aws-glue-assets-956128256668-us-east-1/scripts/",
		"language": "python-3",
		"jobParameters": [],
		"tags": [],
		"jobMode": "DEVELOPER_MODE",
		"createdOn": "2023-08-10T07:47:48.166Z",
		"developerMode": true,
		"connectionsList": [],
		"temporaryDirectory": "s3://aws-glue-assets-956128256668-us-east-1/temporary/",
		"logging": true,
		"glueHiveMetastore": true,
		"etlAutoTuning": true,
		"metrics": true,
		"spark": true,
		"bookmark": "job-bookmark-enable",
		"sparkPath": "s3://aws-glue-assets-956128256668-us-east-1/sparkHistoryLogs/",
		"flexExecution": false,
		"minFlexWorkers": null
	},
	"hasBeenSaved": false,
	"script": "import sys\nfrom awsglue.transforms import *\nfrom awsglue.utils import getResolvedOptions\nfrom pyspark.context import SparkContext\nfrom awsglue.context import GlueContext\nfrom awsglue.job import Job\n\nargs = getResolvedOptions(sys.argv, [\"JOB_NAME\"])\nsc = SparkContext()\nglueContext = GlueContext(sc)\nspark = glueContext.spark_session\njob = Job(glueContext)\njob.init(args[\"JOB_NAME\"], args)\n\n#predicate_pushdown = \"region in ('ca','gb','us)\"\n\n# Script generated for node S3 bucket\nS3bucket_node1 = glueContext.create_dynamic_frame.from_catalog(\n    database=\"de_youtube_raw\",\n    table_name=\"raw_statistics\",\n    transformation_ctx=\"S3bucket_node1\",\n\n)\n\n# Script generated for node ApplyMapping\nApplyMapping_node2 = ApplyMapping.apply(\n    frame=S3bucket_node1,\n    mappings=[\n        (\"video_id\", \"string\", \"video_id\", \"string\"),\n        (\"trending_date\", \"string\", \"trending_date\", \"string\"),\n        (\"title\", \"string\", \"title\", \"string\"),\n        (\"channel_title\", \"string\", \"channel_title\", \"string\"),\n        (\"category_id\", \"long\", \"category_id\", \"bigint\"),\n        (\"publish_time\", \"string\", \"publish_time\", \"string\"),\n        (\"tags\", \"string\", \"tags\", \"string\"),\n        (\"views\", \"long\", \"views\", \"bigint\"),\n        (\"likes\", \"long\", \"likes\", \"bigint\"),\n        (\"dislikes\", \"long\", \"dislikes\", \"bigint\"),\n        (\"comment_count\", \"long\", \"comment_count\", \"bigint\"),\n        (\"thumbnail_link\", \"string\", \"thumbnail_link\", \"string\"),\n        (\"comments_disabled\", \"boolean\", \"comments_disabled\", \"boolean\"),\n        (\"ratings_disabled\", \"boolean\", \"ratings_disabled\", \"boolean\"),\n        (\"video_error_or_removed\", \"boolean\", \"video_error_or_removed\", \"boolean\"),\n        (\"description\", \"string\", \"description\", \"string\"),\n        (\"region\", \"string\", \"region\", \"string\"),\n    ],\n    transformation_ctx=\"ApplyMapping_node2\",\n)\n\n# Script generated for node S3 bucket\nS3bucket_node3 = glueContext.write_dynamic_frame.from_options(\n    frame=ApplyMapping_node2,\n    connection_type=\"s3\",\n    format=\"glueparquet\",\n    connection_options={\n        \"path\": \"s3://de-on-youtube-cleansed-global-dev/youtube/raw_statistics/\",\n        \"partitionKeys\": [\"region\"],\n    },\n    format_options={\"compression\": \"snappy\"},\n    transformation_ctx=\"S3bucket_node3\",\n)\n\njob.commit()\n"
}